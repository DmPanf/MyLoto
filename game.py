from card import Card
from tools import clear_screen, random_list, emoji_digits

class Game:
    player_cards = []
    game_barrels = []
    card_colors = ['‚¨úÔ∏è', 'üü•', 'üü®', 'üü¶', 'üüß', 'üü™', 'üü´', 'üü©']
    user_icons = ['ü§ñ RO-Bot', 'üöó', 'üöï', 'üöô', 'üöö', 'üöë', 'üöí', 'üöú']

    def __init__(self, gamers_count):
        gamers_max = 2 if gamers_count < 3 else gamers_count
        for i in range(gamers_max):
            self.player_cards.append(Card(i+1))
        self.game_barrels = random_list(90)

    def ask_to_cross(self, game_user_card, barrel) -> bool:
        # –ü—Ä–∏ –≤—ã–±–æ—Ä–µ "–∑–∞—á–µ—Ä–∫–Ω—É—Ç—å": –µ—Å–ª–∏ —Ü–∏—Ñ—Ä—ã –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫–µ –Ω–µ—Ç - –∏–≥—Ä–æ–∫ –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–µ—Ç, –∏ –∏–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è
        # –ü—Ä–∏ –≤—ã–±–æ—Ä–µ "–ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å": –µ—Å–ª–∏ —Ü–∏—Ñ—Ä–∞ –µ—Å—Ç—å –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫–µ - –∏–≥—Ä–æ–∫ –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–µ—Ç, –∏ –∏–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è
        # ... –∏–Ω–∞—á–µ - –∏–≥—Ä–∞ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è!
        y_n = input('... –∑–∞—á–µ—Ä–∫–Ω—É—Ç—å [y] ... –Ω–µ—Ç, –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å [n]: ').lower().strip()
        if y_n == 'y' and not barrel in game_user_card or y_n != 'y' and barrel in game_user_card:
            return False   
        return True   


    def check_winner_card(self, game_user_card, barrel):
        if barrel in game_user_card:          # –∑–∞—á–µ—Ä–∫–∏–≤–∞–µ–º —á–∏—Å–ª–æ –≤ –∫–∞—Ä—Ç–æ—á–∫–µ —Ç–µ–∫—É—â–µ–≥–æ –∏–≥—Ä–æ–∫–∞ (–ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏)
            game_user_card.cross_num(barrel)
            if game_user_card.closed():       # –µ—Å–ª–∏ –∫–∞—Ä—Ç–æ—á–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ –∏–≥—Ä–æ–∫–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–∫—Ä—ã—Ç–∞, —Ç–æ –ø–æ–±–µ–¥–∞!
                return True                   # –æ–±—ä—è–≤–ª—è–µ–º –ø–æ–±–µ–¥–∏—Ç–µ–ª—è
        return False                          # –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –∏–≥—Ä—É


    def play_round(self):
        # —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–¥–∞–µ—Ç –∫–æ–º–±–∏–Ω–∞—Ü–∏—é status –∏ –Ω–æ–º–µ—Ä user (int)
        # user=-1 —Å –ø—Ä–æ–∏–≥—Ä–∞–≤—à–∏–º –∏–ª–∏ –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–º –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–∏–ª–∏—Å—å: –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –∏–≥—Ä—É
        # –µ—Å–ª–∏ False, —Ç–æ –∏–≥—Ä–∞ –ø—Ä–µ–∫—Ä–∞—â–∞–µ—Ç—Å—è –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –Ω–æ–º–µ—Ä –ø—Ä–æ–∏–≥—Ä–∞–≤—à–µ–≥–æ
        # –µ—Å–ª–∏ True, —Ç–æ –∏–≥—Ä–∞ –ø—Ä–µ–∫—Ä–∞—â–∞–µ—Ç—Å—è –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –Ω–æ–º–µ—Ä –ø–æ–±–µ–¥–∏—Ç–µ–ª—è
        status = False # —Å—Ç–∞—Ç—É—Å: False=–º–≥–Ω–æ–≤–µ–Ω–Ω—ã–π –ø—Ä–æ–∏–≥—Ä—ã—à –∏–ª–∏ True=–≤—ã–∏–≥—Ä—ã—à –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∏–≥—Ä–æ–∫–∞
        barrel = self.game_barrels.pop()
        emoji_barrel = emoji_digits(barrel)
        print(f'\nüé≤ –§–∏—à–∫–∞ ‚Ññ: {emoji_barrel}  [{90-len(self.game_barrels)}/{len(self.game_barrels)}]')
        for i, card in enumerate(self.player_cards):
            if gamers_count == 0 or (gamers_count == 1 and i == 0): # –î–ª—è –∏–≥—Ä: –ë–æ—Ç <-> –ë–æ—Ç –∏–ª–∏ –ë–æ—Ç <-> –ß–µ–ª–æ–≤–µ–∫
                print(f'\n{self.card_colors[i+1]} –ö–∞—Ä—Ç–æ—á–∫–∞ {self.user_icons[0]}-{i+1}\n{card}')
                time.sleep(0.5)                                     # –¥–ª—è –ë–æ—Ç–∞ –≤–æ–ø—Ä–æ—Å "—á—Ç–æ –¥–µ–ª–∞—Ç—å?" –æ–ø—É—Å–∫–∞–µ–º - –ø–∞—É–∑–∞ –¥–ª—è –Ω–∞–≥–ª—è–¥–Ω–æ—Å—Ç–∏
            else:                                                   #
                print(f'\n{self.card_colors[i+1]} –ö–∞—Ä—Ç–æ—á–∫–∞ –∏–≥—Ä–æ–∫–∞ {i+1} [{self.user_icons[i+1]}]\n{card}')
                status = self.ask_to_cross(card, barrel)            # –¥–ª—è –∏–≥—Ä–æ–∫–æ–≤ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º, —á—Ç–æ –¥–µ–ª–∞—Ç—å: –∑–∞—á–µ—Ä–∫–Ω—É—Ç—å [y], –∏–Ω–∞—á–µ - –¥–∞–ª—å—à–µ
                if not status:                                      # –µ—Å–ª–∏ –∏–≥—Ä–æ–∫ –æ—à–∏–±—Å—è (False), —Ç–æ –ø—Ä–µ–∫—Ä–∞—â–∞–µ–º –∏–≥—Ä—É 
                    return status, i+1                              # üÜò –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –Ω–æ–º–µ—Ä –ø—Ä–æ–∏–≥—Ä–∞–≤—à–µ–≥–æ –∏–≥—Ä–æ–∫–∞ (–ø–æ—ç—Ç–æ–º—É –Ω–æ–º–µ—Ä –Ω–∞ 1 –±–æ–ª—å—à–µ)
            status = self.check_winner_card(card, barrel)           # –ø—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å—Ç–∞—Ç–æ–∫ –Ω–µ–∑–∞—á–µ—Ä–∫–Ω—É—Ç—ã—Ö —á–∏—Å–µ–ª –≤ –∫–∞—Ä—Ç–æ—á–∫–µ —Ç–µ–∫—É—â–µ–≥–æ –ë–æ—Ç–∞/–∏–≥—Ä–æ–∫–∞
            if status:                                              # –µ—Å–ª–∏ –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫–µ –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å —á–∏—Å–µ–ª, —Ç–æ - –æ–∫–æ–Ω—á–∞–Ω–∏–µ –∏–≥—Ä—ã
                return status, i+1                                  # ‚úÖ –ø—Ä–∏ –∑–∞–ø–æ–ª–Ω–Ω–µ–Ω–æ–π –∫–∞—Ä—Ç–æ—á–∫–µ –æ–±—ä—è–≤–ª—è–µ–º –ø–æ–±–µ–¥–∏—Ç–µ–ª—è
        
        time.sleep(0.2)
        clear_screen()
        return status, -1                                          # [-1] —Å –ø—Ä–æ–∏–≥—Ä–∞–≤—à–∏–º –∏–ª–∏ –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–º –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–∏–ª–∏—Å—å: –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –∏–≥—Ä—É
